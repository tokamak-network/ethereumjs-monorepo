export const subcircuits = [
  {
    id: 0,
    opcode: 'fff',
    name: 'Load',
    Nwires: 33,
    Out_idx: [1, 16],
    In_idx: [17, 16],
  },
  {
    id: 1,
    opcode: '1',
    name: 'ADD',
    Nwires: 5,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 2,
    opcode: '2',
    name: 'MUL',
    Nwires: 4,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 3,
    opcode: '3',
    name: 'SUB',
    Nwires: 5,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  /**
   * @TODO DIV Input 3개로 변경될 예정
   */
  {
    id: 4,
    opcode: '4',
    name: 'DIV',
    Nwires: 5,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 5,
    opcode: '20',
    name: 'SHA3',
    Nwires: 4,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 6,
    opcode: '5',
    name: 'SDIV',
    Nwires: 41,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 7,
    opcode: '6',
    name: 'MOD',
    Nwires: 5,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 8,
    opcode: '7',
    name: 'SMOD',
    Nwires: 41,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 9,
    opcode: '8',
    name: 'ADDMOD',
    Nwires: 7,
    Out_idx: [1, 1],
    In_idx: [2, 3],
  },
  {
    id: 10,
    opcode: '9',
    name: 'MULMOD',
    Nwires: 8,
    Out_idx: [1, 1],
    In_idx: [2, 3],
  },
  {
    id: 11,
    opcode: 'a',
    name: 'EXP',
    Nwires: 32,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 12,
    opcode: '14',
    name: 'EQ',
    Nwires: 5,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 13,
    opcode: '15',
    name: 'ISZERO',
    Nwires: 4,
    Out_idx: [1, 1],
    In_idx: [2, 1],
  },
  {
    id: 14,
    opcode: '1b',
    name: 'SHL',
    Nwires: 18,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 15,
    opcode: '1c1',
    name: 'SHR',
    Nwires: 19,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  // /**
  //  * @question (Ale)
  //  * 이더리움 opcode에는 존재하지 않는 것 같은데, SHR-H가 무엇인가요? high bits?
  //  */
  // {
  //   id: 16,
  //   opcode: '1c2',
  //   name: 'SHR-H',
  //   Nwires: 19,
  //   Out_idx: [1, 1],
  //   In_idx: [2, 2],
  // },
  {
    id: 17,
    opcode: '10',
    name: 'LT',
    Nwires: 255,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 18,
    opcode: '11',
    name: 'GT',
    Nwires: 255,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 19,
    opcode: '19',
    name: 'NOT',
    Nwires: 255,
    Out_idx: [1, 1],
    In_idx: [2, 1],
  },
  {
    id: 20,
    opcode: '1a',
    name: 'BYTE',
    Nwires: 274,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 21,
    opcode: '1d',
    name: 'SAR',
    Nwires: 286,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 22,
    opcode: 'b',
    name: 'SIGNEXTEND',
    Nwires: 288,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 23,
    opcode: '12',
    name: 'SLT',
    Nwires: 290,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 24,
    opcode: '13',
    name: 'SGT',
    Nwires: 290,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 25,
    opcode: '16',
    name: 'AND',
    Nwires: 760,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 26,
    opcode: '17',
    name: 'OR',
    Nwires: 760,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 27,
    opcode: '18',
    name: 'XOR',
    Nwires: 760,
    Out_idx: [1, 1],
    In_idx: [2, 2],
  },
  {
    id: 28,
    opcode: 'F3',
    name: 'RETURN',
    Nwires: 0,
    Out_idx: [1, 32],
    In_idx: [33, 1],
  },
  {
    id: 29,
    opcode: '35',
    name: 'CALLDATALOAD',
    Nwires: 0,
    Out_idx: [1, 32],
    In_idx: [33, 1],
  },
  {
    id: 30,
    opcode: '',
    name: 'DecToBit',
    Nwires: 0,
    Out_idx: [1, 256],
    In_idx: [257, 1],
  },
  {
    id: 31,
    opcode: '',
    name: 'SubEXP',
    Nwires: 0,
    Out_idx: [1, 2],
    In_idx: [3, 3],
  },
  {
    id: 32,
    opcode: '',
    name: 'KeccakBuffer',
    Nwires: 0,
    Out_idx: [1, 16],
    In_idx: [17, 16],
  },
]
